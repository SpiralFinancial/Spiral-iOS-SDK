//
// GeoLocation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Geographic location. */
public struct GeoLocation: Codable, JSONEncodable, Hashable {

    public var coordinates: GeoCoordinates?
    /** City name. */
    public var city: String?
    /** ISO 3166-2 sub-national region identifier. */
    public var region: String?
    /** ISO 3166-1 two-character country identifier. */
    public var country: String?

    public init(coordinates: GeoCoordinates? = nil, city: String? = nil, region: String? = nil, country: String? = nil) {
        self.coordinates = coordinates
        self.city = city
        self.region = region
        self.country = country
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case coordinates
        case city
        case region
        case country
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(coordinates, forKey: .coordinates)
        try container.encodeIfPresent(city, forKey: .city)
        try container.encodeIfPresent(region, forKey: .region)
        try container.encodeIfPresent(country, forKey: .country)
    }
}

