//
// GivingCharityOneTimeDonationRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** One-time donation request */
public struct GivingCharityOneTimeDonationRequest: Codable, JSONEncodable, Hashable {

    /** External account ID to make the donation from */
    public var accountId: String
    /** Spiral ID of selected Charity */
    public var charityId: String
    /** Fixed-point decimal number, carried up to two decimal places. */
    public var amount: Double
    /** Is donation anonymous */
    public var anonymous: Bool

    public init(accountId: String, charityId: String, amount: Double, anonymous: Bool) {
        self.accountId = accountId
        self.charityId = charityId
        self.amount = amount
        self.anonymous = anonymous
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case accountId
        case charityId
        case amount
        case anonymous
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(accountId, forKey: .accountId)
        try container.encode(charityId, forKey: .charityId)
        try container.encode(amount, forKey: .amount)
        try container.encode(anonymous, forKey: .anonymous)
    }
}

