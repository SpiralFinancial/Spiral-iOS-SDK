//
// DonationReceiptEverydayImpactReport.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DonationReceiptEverydayImpactReport: Codable, JSONEncodable, Hashable {

    static let monthRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 12, exclusiveMaximum: false, multipleOf: nil)
    /** Year receipt was issued for */
    public var year: Int
    /** Month receipt was issued for */
    public var month: Int
    /** Everyday Impact Receipt Id */
    public var receiptId: String
    public var content: [DonationReceiptEverydayImpactReportElement]

    public init(year: Int, month: Int, receiptId: String, content: [DonationReceiptEverydayImpactReportElement]) {
        self.year = year
        self.month = month
        self.receiptId = receiptId
        self.content = content
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case year
        case month
        case receiptId
        case content
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(year, forKey: .year)
        try container.encode(month, forKey: .month)
        try container.encode(receiptId, forKey: .receiptId)
        try container.encode(content, forKey: .content)
    }
}

