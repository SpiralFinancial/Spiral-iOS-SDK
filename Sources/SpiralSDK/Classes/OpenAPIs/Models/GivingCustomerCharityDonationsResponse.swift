//
// GivingCustomerCharityDonationsResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Customer donations info for a specific Charity */
public struct GivingCustomerCharityDonationsResponse: Codable, JSONEncodable, Hashable {

    /** Spiral Charity ID */
    public var charityId: String?
    public var recurring: GivingCustomerCharityRecurringDonationResponse?
    public var oneTime: GivingCustomerCharityDonationsSummary?
    public var total: GivingCustomerCharityDonationsSummary?

    public init(charityId: String? = nil, recurring: GivingCustomerCharityRecurringDonationResponse? = nil, oneTime: GivingCustomerCharityDonationsSummary? = nil, total: GivingCustomerCharityDonationsSummary? = nil) {
        self.charityId = charityId
        self.recurring = recurring
        self.oneTime = oneTime
        self.total = total
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case charityId
        case recurring
        case oneTime
        case total
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(charityId, forKey: .charityId)
        try container.encodeIfPresent(recurring, forKey: .recurring)
        try container.encodeIfPresent(oneTime, forKey: .oneTime)
        try container.encodeIfPresent(total, forKey: .total)
    }
}

