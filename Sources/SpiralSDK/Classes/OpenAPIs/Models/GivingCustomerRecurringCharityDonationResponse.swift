//
// GivingCustomerRecurringCharityDonationResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Customer giving recurring charity donation */
public struct GivingCustomerRecurringCharityDonationResponse: Codable, JSONEncodable, Hashable {

    public var charity: GivingCharityResponse?
    /** Is recurring donation paused */
    public var isPaused: Bool?
    /** Recurring donation amount */
    public var donationAmount: Double?
    /** Recurring donation id */
    public var id: String?

    public init(charity: GivingCharityResponse? = nil, isPaused: Bool? = nil, donationAmount: Double? = nil, id: String? = nil) {
        self.charity = charity
        self.isPaused = isPaused
        self.donationAmount = donationAmount
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case charity
        case isPaused
        case donationAmount
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(charity, forKey: .charity)
        try container.encodeIfPresent(isPaused, forKey: .isPaused)
        try container.encodeIfPresent(donationAmount, forKey: .donationAmount)
        try container.encodeIfPresent(id, forKey: .id)
    }
}

