//
// SelectedImpactCategory.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Lightweight Impact Category with attributes selected by client */
public struct SelectedImpactCategory: Codable, JSONEncodable, Hashable {

    public var categoryName: String?
    public var charityName: String?
    public var rewardUnitName: String?
    /** Internal cost of this reward unit */
    public var internalCostAmount: Double?
    /** Whether this category can be selected together with other categories or if it's exclusive. */
    public var isCategoryOverride: Bool?

    public init(categoryName: String? = nil, charityName: String? = nil, rewardUnitName: String? = nil, internalCostAmount: Double? = nil, isCategoryOverride: Bool? = nil) {
        self.categoryName = categoryName
        self.charityName = charityName
        self.rewardUnitName = rewardUnitName
        self.internalCostAmount = internalCostAmount
        self.isCategoryOverride = isCategoryOverride
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case categoryName
        case charityName
        case rewardUnitName
        case internalCostAmount
        case isCategoryOverride
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(categoryName, forKey: .categoryName)
        try container.encodeIfPresent(charityName, forKey: .charityName)
        try container.encodeIfPresent(rewardUnitName, forKey: .rewardUnitName)
        try container.encodeIfPresent(internalCostAmount, forKey: .internalCostAmount)
        try container.encodeIfPresent(isCategoryOverride, forKey: .isCategoryOverride)
    }
}

