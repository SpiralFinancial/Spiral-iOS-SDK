//
// Pageable.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Pageable: Codable, JSONEncodable, Hashable {

    /** Zero-based page index (0..N) */
    public var page: Int? = 0
    /** The size of the page to be returned */
    public var size: Int? = 20
    /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
    public var sort: [String]?

    public init(page: Int? = 0, size: Int? = 20, sort: [String]? = nil) {
        self.page = page
        self.size = size
        self.sort = sort
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case page
        case size
        case sort
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(page, forKey: .page)
        try container.encodeIfPresent(size, forKey: .size)
        try container.encodeIfPresent(sort, forKey: .sort)
    }
}

