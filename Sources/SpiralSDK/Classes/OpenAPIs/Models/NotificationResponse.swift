//
// NotificationResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct NotificationResponse: Codable, JSONEncodable, Hashable {

    /** Unique Notification id */
    public var id: String
    /** Date and time when notification got created */
    public var createdAtDate: Date
    /** Notification icon url */
    public var iconUrl: String?
    /** Notification HTML content as an object */
    public var content: AnyCodable
    /** Has notification been viewed by customer */
    public var isViewed: Bool

    public init(id: String, createdAtDate: Date, iconUrl: String? = nil, content: AnyCodable, isViewed: Bool) {
        self.id = id
        self.createdAtDate = createdAtDate
        self.iconUrl = iconUrl
        self.content = content
        self.isViewed = isViewed
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case createdAtDate
        case iconUrl
        case content
        case isViewed
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(createdAtDate, forKey: .createdAtDate)
        try container.encodeIfPresent(iconUrl, forKey: .iconUrl)
        try container.encode(content, forKey: .content)
        try container.encode(isViewed, forKey: .isViewed)
    }
}

