//
// GivingCharityDonationFeesResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Breakdown of donation fees and disclosures */
public struct GivingCharityDonationFeesResponse: Codable, JSONEncodable, Hashable {

    /** Total donation fees. Point decimal, up to 2 decimal. */
    public var feesAmount: Double
    /** Amount going to the charity (receipt amount) */
    public var charityAmount: Double
    /** Total amount that will be taken from the customer's account */
    public var totalAmount: Double
    /** Detailed explanation of applicable fees */
    public var disclosureText: String?
    /** Text to display on a successful donation, with a detailed breakdown of where your funds and fees are going */
    public var successText: String?

    public init(feesAmount: Double, charityAmount: Double, totalAmount: Double, disclosureText: String? = nil, successText: String? = nil) {
        self.feesAmount = feesAmount
        self.charityAmount = charityAmount
        self.totalAmount = totalAmount
        self.disclosureText = disclosureText
        self.successText = successText
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case feesAmount
        case charityAmount
        case totalAmount
        case disclosureText
        case successText
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(feesAmount, forKey: .feesAmount)
        try container.encode(charityAmount, forKey: .charityAmount)
        try container.encode(totalAmount, forKey: .totalAmount)
        try container.encodeIfPresent(disclosureText, forKey: .disclosureText)
        try container.encodeIfPresent(successText, forKey: .successText)
    }
}

