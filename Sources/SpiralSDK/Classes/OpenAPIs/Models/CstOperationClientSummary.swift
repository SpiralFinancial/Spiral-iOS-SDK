//
// CstOperationClientSummary.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CstOperationClientSummary: Codable, JSONEncodable, Hashable {

    /** Client's unique identifier */
    public var clientId: String?
    /** Client name */
    public var clientName: String?
    /** Number of donations made */
    public var donationCount: Double?
    /** Total donation value */
    public var donationTotal: Double?
    /** Value of all donation checks */
    public var donationCheck: Double?
    /** Value of all ACH donations */
    public var donationACH: Double?
    /** Number of everyday impact transactions */
    public var everydayImpactTransactionCount: Double?
    /** Total everyday impact value */
    public var everydayImpactTransactionTotal: Double?
    /** Value of all everyday impact checks */
    public var everydayImpactTransactionCheck: Double?
    /** Value of all ACH everyday impact */
    public var everydayImpactTransactionACH: Double?

    public init(clientId: String? = nil, clientName: String? = nil, donationCount: Double? = nil, donationTotal: Double? = nil, donationCheck: Double? = nil, donationACH: Double? = nil, everydayImpactTransactionCount: Double? = nil, everydayImpactTransactionTotal: Double? = nil, everydayImpactTransactionCheck: Double? = nil, everydayImpactTransactionACH: Double? = nil) {
        self.clientId = clientId
        self.clientName = clientName
        self.donationCount = donationCount
        self.donationTotal = donationTotal
        self.donationCheck = donationCheck
        self.donationACH = donationACH
        self.everydayImpactTransactionCount = everydayImpactTransactionCount
        self.everydayImpactTransactionTotal = everydayImpactTransactionTotal
        self.everydayImpactTransactionCheck = everydayImpactTransactionCheck
        self.everydayImpactTransactionACH = everydayImpactTransactionACH
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case clientId
        case clientName
        case donationCount
        case donationTotal
        case donationCheck
        case donationACH
        case everydayImpactTransactionCount
        case everydayImpactTransactionTotal
        case everydayImpactTransactionCheck
        case everydayImpactTransactionACH
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(clientId, forKey: .clientId)
        try container.encodeIfPresent(clientName, forKey: .clientName)
        try container.encodeIfPresent(donationCount, forKey: .donationCount)
        try container.encodeIfPresent(donationTotal, forKey: .donationTotal)
        try container.encodeIfPresent(donationCheck, forKey: .donationCheck)
        try container.encodeIfPresent(donationACH, forKey: .donationACH)
        try container.encodeIfPresent(everydayImpactTransactionCount, forKey: .everydayImpactTransactionCount)
        try container.encodeIfPresent(everydayImpactTransactionTotal, forKey: .everydayImpactTransactionTotal)
        try container.encodeIfPresent(everydayImpactTransactionCheck, forKey: .everydayImpactTransactionCheck)
        try container.encodeIfPresent(everydayImpactTransactionACH, forKey: .everydayImpactTransactionACH)
    }
}

