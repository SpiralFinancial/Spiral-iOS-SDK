//
// CharityRewardUnit.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CharityRewardUnit: Codable, JSONEncodable, Hashable {

    /** Unique Charity Reward Unit ID */
    public var id: String
    /** Charity ID this reward unit is assigned to */
    public var charityId: String
    /** Name of the charity (used in reply of enriched transactions). */
    public var charityName: String?
    /** Internal cost per one unit in cents */
    public var internalCostInCents: Int
    /** Reward Unit key */
    public var unit: String

    public init(id: String, charityId: String, charityName: String? = nil, internalCostInCents: Int, unit: String) {
        self.id = id
        self.charityId = charityId
        self.charityName = charityName
        self.internalCostInCents = internalCostInCents
        self.unit = unit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case charityId
        case charityName
        case internalCostInCents
        case unit
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(charityId, forKey: .charityId)
        try container.encodeIfPresent(charityName, forKey: .charityName)
        try container.encode(internalCostInCents, forKey: .internalCostInCents)
        try container.encode(unit, forKey: .unit)
    }
}

