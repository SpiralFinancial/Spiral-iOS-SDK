openapi: 3.0.3
info:
  title: Spiral - Everyday Impact - v1
  description: _Spiral mission statement here_
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "0.0.3-6"
externalDocs:
  description: Spiral online developer docs
  url: http://swagger.io
servers:
- url: https://sdk-api-stage1.spiral.us/v1
  description: Staging Server (uses test data)
- url: https://sdk-api-qa.spiral.us/v1
  description: QA Staging Environment (uses test data)
security:
- ClientID: []
tags:
- name: transactionProcessor
  description: Process transaction synchronous in real time and async offline for
    Everyday Impact.
  externalDocs:
    description: Find out more
    url: http://spiral.us
- name: reporting
  description: Obtain client's/customer's Everyday Impact reports
  externalDocs:
    description: Find out more
    url: http://spiral.us
- name: giving
  description: Allow customers to make donations to charities of their choice
  externalDocs:
    description: Find out more
    url: http://spiral.us
- name: management
  description: Self-service portal for Spiral clients
  externalDocs:
    description: Find out more
    url: http://spiral.us
- name: cms
  description: Allow client apps to defined their own API responses
  externalDocs:
    description: Find out more
    url: http://spiral.us
paths:
  /transaction/process:
    post:
      tags:
      - transactionProcessor
      summary: Categorize a given financial transaction
      description: Request a financial transaction to be categorized on behalf of
        a customer.
      operationId: processTransaction
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      requestBody:
        description: Transaction to process
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionProcessRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionProcessResponse'
        "202":
          description: Request has been accepted and will be processed. Query back
            by transaction ID to check status.
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
        "406":
          description: Not Acceptable
  /transaction/{transactionId}:
    delete:
      tags:
      - transactionProcessor
      summary: Delete processed transaction
      description: Delete processed transaction with specified id
      operationId: deleteTransaction
      parameters:
      - name: X-SPIRAL-SDK-VERSION
        in: header
        description: Unique version of the SDK that makes the call (ie. ios-1.2.3
          or web-1.2.3)
        schema:
          type: string
          format: guid
          example: ios-1.0.0
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: transactionId
        in: path
        description: "Permanent, unique transaction id of transaction to be deleted."
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
          example: ea084d9b-f4e5-4307-b208-d80a82834687
      responses:
        "200":
          description: Successful Operation
        "204":
          description: "Request accepted, requested transaction not found"
        "400":
          description: Invalid Request
        "404":
          description: Client not found
        "405":
          description: Validation Exception
  /cms/template:
    get:
      tags:
      - cms
      summary: Load a specific UI card template by predefined type
      description: Load a specific UI card template by predefined type defined via
        GenericTemplateType.
      operationId: getTypedGenericTemplate
      parameters:
      - name: X-SPIRAL-SDK-VERSION
        in: header
        description: Unique version of the SDK that makes the call (ie. ios-1.2.3
          or web-1.2.3)
        schema:
          type: string
          format: guid
          example: ios-1.0.0
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: type
        in: query
        description: Unique type for the UI card.
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GenericTemplateType'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTemplateResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /cms/template/generic:
    get:
      tags:
      - cms
      summary: Load a specific UI card template
      description: Load a specific UI card template
      operationId: getGenericCard
      parameters:
      - name: X-SPIRAL-SDK-VERSION
        in: header
        description: Unique version of the SDK that makes the call (ie. ios-1.2.3
          or web-1.2.3)
        schema:
          type: string
          format: guid
          example: ios-1.0.0
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: type
        in: query
        description: Unique type for the UI card.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTemplateResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /everyday-impact/customer:
    get:
      tags:
      - reporting
      summary: Load a customer's Impact
      description: Load total customer's Impact
      operationId: getCustomerImpactSummary
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: period
        in: query
        description: The period of transactions to include in the search. Defaults
          to ALL-TIME.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SummaryTimePeriod'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionImpactSummaryResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /everyday-impact/{transactionId}:
    get:
      tags:
      - reporting
      summary: Load a customer's Impact details for a single transaction
      description: Load that customer's Impact details for a single transaction
      operationId: getCustomerImpactByTransactionId
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: transactionId
        in: path
        description: "Permanent, unique transaction id to retrieve the Impact details\
          \ for. Must survive changes to pending status or amount."
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: "Permanent, unique transaction identifier. Must survive changes\
            \ to pending status or amount."
          format: guid
          example: 8c4b6156-b23e-4d2b-b888-e3c19469fe85
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionImpactResponse'
        "400":
          description: Invalid Request
        "404":
          description: External Transaction by ID not found
        "405":
          description: Validation Exception
  /everyday-impact/transaction:
    get:
      tags:
      - reporting
      summary: Load a customer's detailed Impact transactions list based on provided
        filters
      description: Load a customer's detailed Impact transactions list based on provided
        filters
      operationId: getCustomerTransactionsImpact
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: ids
        in: query
        description: "Optional transaction ids; if provided, will be used instead\
          \ of search parameters."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: 07c42307-dc24-4767-ac61-908b5290fea7
      - name: search
        in: query
        description: Search query; filters transaction descriptions in a case-insensitive
          way.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Starbucks
      - name: rewardUnit
        in: query
        description: A list of reward units to include in the search. Defaults to
          all units if not provided.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: period
        in: query
        description: The period of transactions to include in the search. Defaults
          to ALL-TIME.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SummaryTimePeriod'
      - name: pageable
        in: query
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsImpactResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /everyday-impact/center/transaction:
    get:
      tags:
      - reporting
      summary: Load a customer's detailed Impact transactions list based on provided
        filters
      description: Load a customer's detailed Impact transactions list based on provided
        filters for Impact Center
      operationId: getCustomerImpactCenterTransactions
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: rewardUnitId
        in: query
        description: Reward unit to get transactions by. Defaults to all units if
          not provided.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: e11c2e60-a9cb-49b9-bcaa-28927ed7ebd2
      - name: pageable
        in: query
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EverydayImpactCenterTransactionsResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /giving/category:
    get:
      tags:
      - giving
      summary: Get charity categories
      description: Load all available charity categories
      operationId: getCharityCategories
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCharityCategoriesResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /giving/category/{categoryID}:
    get:
      tags:
      - giving
      summary: Load charities that belong to a category
      description: Load charity category details along with list of charities that
        belong to this category
      operationId: getCategoryDetails
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: categoryID
        in: path
        description: ID of charity category
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
          example: a4abb4db-6933-42d8-8d55-df30803fa20a
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCharityCategoryResponse'
        "400":
          description: Invalid Request
        "404":
          description: Category by ID not found
        "405":
          description: Validation Exception
  /giving/charity:
    post:
      tags:
      - giving
      summary: Search for charities
      description: "Given a filter, load all matching charities"
      operationId: searchCharities
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: pageable
        in: query
        schema:
          $ref: '#/components/schemas/Pageable'
      requestBody:
        description: Filter for charity categories
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GivingCharitiesSearchRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCharitiesSearchResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /giving/customer/charity/{id}:
    get:
      tags:
      - giving
      summary: Load charity details for customer
      description: Load a charity details by ID for customer
      operationId: getCharityById
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: id
        in: path
        description: Spiral ID of Charity
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCustomerCharityResponse'
        "400":
          description: Invalid Request
        "404":
          description: Charity by ID not found
        "405":
          description: Validation Exception
  /giving/customer/donation/summary:
    get:
      tags:
      - giving
      summary: Load customer giving donations summary
      description: Load customer giving donations summary for given time period
      operationId: getCustomerDonationSummary
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: period
        in: query
        description: The period of giving summary
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SummaryTimePeriod'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCustomerDonationsSummaryResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /giving/customer/donation/fee:
    post:
      tags:
      - giving
      summary: Calculate donation fees
      description: Calculate donation fees
      operationId: calculateDonationFees
      parameters:
      - name: X-SPIRAL-SDK-VERSION
        in: header
        description: Unique version of the SDK that makes the call (ie. ios-1.2.3
          or web-1.2.3)
        schema:
          type: string
          format: guid
          example: ios-1.0.0
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GivingCharityOneTimeDonationRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCharityDonationFeesResponse'
        "400":
          description: Invalid Request
        "404":
          description: Charity by ID not found
        "405":
          description: Validation Exception
  /giving/customer/donation/one-time:
    post:
      tags:
      - giving
      summary: Donate to charity (one-time)
      description: Make a one-time donation to charity by id
      operationId: donateToCharityOneTime
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      requestBody:
        description: Create one-time donation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GivingCharityOneTimeDonationRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
        "400":
          description: Invalid Request
        "404":
          description: Charity by ID not found
        "405":
          description: Validation Exception
  /giving/customer/donation/validate/{charityId}:
    get:
      tags:
      - giving
      summary: Validate donation to a charity
      description: Validate donation to a charity
      operationId: validateCharityDonation
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: charityId
        in: path
        description: The charity ID to donate to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful Operation
        "400":
          description: Invalid Request
        "404":
          description: Charity by ID not found
        "405":
          description: Validation Exception
  /giving/customer/donation/recurring:
    post:
      tags:
      - giving
      summary: Donate to charity (recurring)
      description: Create a recurring donation to charity by id
      operationId: createRecurringDonation
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      requestBody:
        description: Create recurring donation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GivingCharityRecurringDonationCreateRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCharityRecurringDonationResponse'
        "400":
          description: Invalid Request
        "404":
          description: Charity by ID not found
        "405":
          description: Validation Exception
  /giving/customer/donation/recurring/{id}:
    get:
      tags:
      - giving
      summary: Get recurring donation
      description: Get customer recurring donation details by id
      operationId: getRecurringDonationById
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: id
        in: path
        description: Spiral ID of recurring donation
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCharityRecurringDonationResponse'
        "400":
          description: Invalid Request
        "404":
          description: Donation not found by id
    put:
      tags:
      - giving
      summary: Update recurring donation
      description: Update customers recurring donation by id
      operationId: updateRecurringDonationById
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: id
        in: path
        description: Spiral ID of recurring donation
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      requestBody:
        description: Update recurring donation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GivingCharityRecurringDonationUpdateRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCharityRecurringDonationResponse'
        "400":
          description: Invalid Request
        "404":
          description: Donation not found by id
  /giving/customer/donation/receipt:
    get:
      tags:
      - giving
      summary: Load customer giving donation receipts
      description: "Load customer giving donation receipt, grouped by month and, if\
        \ required, charity"
      operationId: getCustomerDonationReceiptSummary
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: groupBy
        in: query
        description: "The grouping to use for the receipts. If not provided, defaults\
          \ to UNGROUPED."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/DonationReceiptSummaryGrouping'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCustomerDonationReceiptSummaryResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /giving/customer/donation/receipt/{receiptId}:
    get:
      tags:
      - giving
      summary: Load customer giving donation receipt
      description: Load a given customer donation receipt
      operationId: getCustomerDonationReceipt
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: receiptId
        in: path
        description: The receipt's unique ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 229ab10d-d3f8-4c72-b292-2d9841a9ffdb
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /giving/customer/charity/summary:
    get:
      tags:
      - giving
      summary: Load customers charity summary
      description: Load customers summary for charities and their donations
      operationId: getCustomerCharitySummary
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GivingCustomerCharitiesSummaryResponse'
        "400":
          description: Invalid Request
  /giving/customer/donation/{id}/charity:
    put:
      tags:
      - giving
      summary: Update donation charity
      description: Update failed donation charity
      operationId: updateFailedDonationCharity
      parameters:
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request ID used for troubleshooting.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer ID.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Unique Donation ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
          example: 9dcefb7d-03ea-4fa4-837f-470b0c29c340
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFailedDonationCharityRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
        "400":
          description: Invalid Request
        "405":
          description: Validation exception
  /management/client/settings/everyday-impact:
    get:
      tags:
      - management
      summary: Retrieves client Everyday Impact related settings
      description: "Retrieves client categories, reward units, cost per reward unit\
        \ and round up values"
      operationId: getClientImpactSettings
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientImpactResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /management/customer/everyday-impact/category:
    get:
      tags:
      - management
      summary: Load customer everyday impact categories selection
      description: Load everyday impact categories selected by customer
      operationId: getCustomerImpactCategories
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelectedImpactCategoriesResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
    put:
      tags:
      - management
      summary: Updates customer everyday impact category selections
      description: Updates customer everyday impact category selections
      operationId: setCustomerImpactCategories
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      requestBody:
        description: Customer everyday impact category selections request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedImpactCategoriesRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /management/customer/notification/info:
    get:
      tags:
      - management
      summary: Get info notifications page
      description: Get short info notifications page
      operationId: getInfoNotifications
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: X-SPIRAL-SDK-VERSION
        in: header
        description: Unique version of the SDK that makes the call (ie. ios-1.2.3
          or web-1.2.3)
        schema:
          type: string
          format: guid
          example: ios-1.0.0
      - name: pageable
        in: query
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsPaginatedResponse'
        "400":
          description: Invalid request
        "405":
          description: Validation Exception
  /management/customer/notification/actionable:
    get:
      tags:
      - management
      summary: Get actionable notifications
      description: Get Notifications requiring customer action
      operationId: getActionableNotifications
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      - name: X-SPIRAL-SDK-VERSION
        in: header
        description: Unique version of the SDK that makes the call (ie. ios-1.2.3
          or web-1.2.3)
        schema:
          type: string
          format: guid
          example: ios-1.0.0
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionNotificationsResponse'
        "400":
          description: Invalid request
        "405":
          description: Validation exception
  /management/customer/notification/unread:
    get:
      tags:
      - management
      summary: Get new notifications count
      description: Get new notifications count per Product for Customer
      operationId: getNotificationsCount
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCountResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /management/customer/notification/{id}:
    get:
      tags:
      - management
      summary: Get notification details
      description: Get notification details by ID
      operationId: getNotificationDetails
      parameters:
      - name: X-SPIRAL-SDK-VERSION
        in: header
        description: Unique version of the SDK that makes the call (ie. ios-1.2.3
          or web-1.2.3)
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer ID.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request ID used for troubleshooting.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Unique Spiral Notification ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
          example: b84061fe-b6ee-4918-818d-9917fcd37cc6
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationDetailsResponse'
        "400":
          description: Invalid Request
  /management/terms-and-conditions:
    get:
      tags:
      - management
      summary: Retrieves Spiral terms and conditions
      description: Retrieves Spiral terms and conditions copy
      operationId: getTermsAndConditions
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /management/customer/settings/everyday-impact:
    get:
      tags:
      - management
      summary: Retrieves customer settings
      description: Retrieves customer limit selections
      operationId: getCustomerSettings
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSettings'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
    put:
      tags:
      - management
      summary: Updates customer settings
      description: Updated customer limit selections
      operationId: setCustomerSettings
      parameters:
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      requestBody:
        description: Update client settings request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSettingsRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
  /management/client/settings:
    get:
      tags:
      - management
      summary: Retrieves client settings
      description: Retrieves client settings for a customer
      operationId: getClientSettingsForCustomer
      parameters:
      - name: X-SPIRAL-CLIENT-ID
        in: header
        description: Unique bank client Id.
        schema:
          type: string
          format: guid
          example: c81ad7dc-7668-4962-a453-8ebc058831d0
      - name: X-SPIRAL-CUSTOMER-ID
        in: header
        description: Unique end user bank customer Id.
        schema:
          type: string
          format: guid
          example: 9556c434-780a-4452-82dd-0bdaa299bea4
      - name: X-SPIRAL-REQUEST-ID
        in: header
        description: Unique request Id used for troubleshooting.
        schema:
          type: string
          format: guid
          example: b1df1812-ee1c-4178-87ed-89c711a01672
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerClientSettingsResponse'
        "400":
          description: Invalid Request
        "405":
          description: Validation Exception
components:
  schemas:
    TransactionProcessRequest:
      required:
      - transaction
      - type
      type: object
      properties:
        type:
          type: string
          description: Processing Type
          example: sync
          enum:
          - sync
          - async
        transaction:
          $ref: '#/components/schemas/DepositoryOrCreditTransaction'
    TransactionProcessResponse:
      required:
      - impact
      - rewardSettings
      - transactionId
      type: object
      properties:
        transactionId:
          type: string
          description: "Permanent, unique transaction id. Must survive changes to\
            \ pending status or amount."
          format: guid
          example: 5983954b-a80b-4702-9d47-e19e50b1a465
        impact:
          $ref: '#/components/schemas/TransactionImpactResponse'
    GenericTemplateType:
      type: string
      description: Unique type for the UI card.
      enum:
      - SR_SUMMARY
      - HOW_IT_WORKS
      - USER_SPONSORED_OPT_IN
      - DONATION_FEE_DISCLOSURE
      - DONATION_FEE_SUCCESS
      - SGN_DONATION_FEE_DISCLOSURE
      - SGN_DONATION_FEE_SUCCESS
      - NOTIFICATION_DONATION_RECEIVED
      - NOTIFICATION_DETAILS_DONATION_RECEIVED
      - NOTIFICATION_DONATION_CHARITY_UPDATE
      - NOTIFICATION_DETAILS_DONATION_CHARITY_UPDATE
      - NOTIFICATION_DONATION_CHARITY_ALTERNATIVE_SELECTED
      - NOTIFICATION_DETAILS_DONATION_CHARITY_ALTERNATIVE_SELECTED
      - NOTIFICATION_DONATION_UNABLE_TO_PROCESS
      - NOTIFICATION_DETAILS_DONATION_UNABLE_TO_PROCESS
      - SGN_EVERYDAY_IMPACT_DONATION_FEE_DISCLOSURE
      - SGN_UNDERSTAND_MY_DONATION
    GenericTemplateResponse:
      required:
      - template
      type: object
      properties:
        template:
          type: object
          description: Generic template JSON
      description: Generic template response
    SummaryTimePeriod:
      type: string
      description: Possible periods to choose from for Impact reports
      enum:
      - ALL_TIME
      - LAST_MONTH
    TransactionImpactSummaryResponse:
      required:
      - impact
      type: object
      properties:
        mostRecentRewardedUnitId:
          type: string
          description: ID of most recently rewarded unit
          example: e286e220-9d3c-4e30-a963-57d4fd49ff7a
        impact:
          type: array
          items:
            $ref: '#/components/schemas/TransactionImpactSummaryItem'
      description: Single customer's Impact report
    TransactionImpactResponse:
      required:
      - categoryId
      - categoryName
      - impactUnits
      type: object
      properties:
        categoryId:
          type: string
          format: guid
          example: ec9a04ad-4b26-43b6-aa70-4c93304d9e4b
        customerId:
          type: string
          format: guid
          example: 7c6fc0cd-3b5f-4ad8-9144-3259b8ee7a3a
        categoryName:
          type: string
          description: Name of the charity category.
          example: "Gas, Transportation"
        rewardUnit:
          $ref: '#/components/schemas/CharityRewardUnit'
        impactUnits:
          type: number
          description: Point value for associated Impact Category Unit.
          example: 1.0
        collectedAmount:
          type: number
          description: "Total amount collected from the customer, including all fees."
          example: 0.21
        donatedAmount:
          type: number
          description: Dollar value donated to Impact Category Charity.
          example: 0.15
        externalFeeAmount:
          type: number
          description: Amount collected for external processing fees.
          example: 0.01
        internalFeeAmount:
          type: number
          description: Amount collected for internal processing fees.
          example: 0.05
        roundupAmount:
          type: number
          description: Dollar value of how much was rounded up
          example: 0.09
        transactionId:
          type: string
          description: "Permanent, unique transaction identifier. Must survive changes\
            \ to pending status or amount."
          example: d2b6af27-5881-4b8a-8ead-a668892a34a6
        transactedAtDate:
          type: string
          description: Date and time at which transaction was made
          format: date-time
          example: 2023-04-11T10:39:09-04:00
        settledAtDate:
          type: string
          description: Date and time at which transaction settled
          format: date-time
          example: 2023-04-11T10:39:46-04:00
        transactionTitle:
          type: string
          description: The cleaned up transaction title.
          example: O'Reilly auto parts purchase
        transactionType:
          type: string
          description: The type or source of the transaction
          example: Debit card
        statementDescription:
          type: string
          description: "Detailed transaction description, like it would appear in\
            \ your statement."
          example: OREILLY AUTO 00023838 AUSTIN TX Date 06/01/18 2 7663590439 1 5533
            Card 6357
        transactionAmount:
          type: number
          description: Transaction amount with two decimal places.
          example: 23.41
        accountId:
          type: string
          description: Transaction account identifier.
          example: bfc7a321-2deb-4103-a804-d044f5375348
      description: A single Impact from performing a financial transaction.
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          description: Zero-based page index (0..N)
          default: 0
        size:
          minimum: 1
          type: integer
          description: The size of the page to be returned
          default: 20
        sort:
          type: array
          description: "Sorting criteria in the format: property,(asc|desc). Default\
            \ sort order is ascending. Multiple sort criteria are supported."
          items:
            type: string
            example: "id,asc"
    TransactionsImpactResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - required:
        - content
        type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/components/schemas/TransactionImpactResponse'
    EverydayImpactCenterTransactionsResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - required:
        - content
        type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/components/schemas/EverydayImpactCenterTransaction'
    GivingCharityCategoriesResponse:
      required:
      - categories
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/GivingCharityCategoryResponse'
      description: Search result for Charity Categories
    GivingCharityCategoryResponse:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the charity category.
          format: guid
          example: 32a396ce-8865-4f46-9be0-0e186895938f
        name:
          type: string
          description: Name of the charity category.
          example: Poverty
        backgroundImageUrl:
          type: string
          description: Background image.
          example: https://bla.com/image.png
        clientScoped:
          type: boolean
          description: Whether this category is client scoped
          example: false
        charities:
          type: array
          description: List of Giving Charities belonging to this category
          items:
            $ref: '#/components/schemas/GivingCharityResponse'
    GivingCharitiesSearchRequest:
      required:
      - query
      type: object
      properties:
        query:
          type: string
          description: "Search query term for a Charity lookup by ID, name or EIN."
          example: '*doctor | EIN'
      description: Filter for Charity a customer can donate to.
    GivingCharitiesSearchResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - required:
        - content
        type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/components/schemas/GivingCharityResponse'
    GivingCustomerCharityResponse:
      required:
      - charity
      type: object
      properties:
        charity:
          $ref: '#/components/schemas/GivingCharityResponse'
        donations:
          $ref: '#/components/schemas/GivingCustomerCharityDonationsResponse'
      description: Charity details along with customer donation info
    GivingCustomerDonationsSummaryResponse:
      required:
      - allTime
      - everDonated
      - oneTime
      - periodTotal
      - recurring
      type: object
      properties:
        everDonated:
          type: boolean
          description: Has customer ever donated to any charities
          example: true
        periodTotal:
          $ref: '#/components/schemas/GivingCustomerDonationsSummaryItem'
        recurring:
          $ref: '#/components/schemas/GivingCustomerDonationsSummaryItem'
        oneTime:
          $ref: '#/components/schemas/GivingCustomerDonationsSummaryItem'
        allTime:
          $ref: '#/components/schemas/GivingCustomerDonationsSummaryItem'
      description: Customer giving donations summary for given time period
    GivingCharityOneTimeDonationRequest:
      required:
      - accountId
      - charityId
      - coverFees
      - donationAmount
      - isAnonymous
      type: object
      properties:
        accountId:
          type: string
          description: External account ID to make the donation from
          example: df744576-556a-4fe0-996c-b6717506e1e4
        charityId:
          type: string
          description: Spiral ID of selected Charity
          example: f195929f-effc-4501-9eec-33d89d83fcdb
        donationAmount:
          minimum: 0.01
          type: number
          description: "Fixed-point decimal number, carried up to two decimal places."
          example: 12.78
        isAnonymous:
          type: boolean
          description: Is donation anonymous
          example: false
        coverFees:
          type: boolean
          description: Does customer agree to cover donation fees
          example: false
        donorInformation:
          $ref: '#/components/schemas/DonorInformation'
      description: One-time donation request
    GivingCharityDonationFeesResponse:
      required:
      - charityAmount
      - feesAmount
      - totalAmount
      type: object
      properties:
        feesAmount:
          type: number
          description: "Total donation fees. Point decimal, up to 2 decimal."
          example: 1.02
        charityAmount:
          type: number
          description: Amount going to the charity (receipt amount)
          example: 15.0
        totalAmount:
          type: number
          description: Total amount that will be taken from the customer's account
          example: 16.02
        disclosureText:
          type: string
          description: Detailed explanation of applicable fees
          example: "Your donation is being made to American Online Giving Foundation,\
            \ Inc, registered in the United States, which takes legal control of donations\
            \ and disburses funds, usually once a month, to the selected charity(ies).\
            \ Charities will receive your donation, less fees. Donation processing\
            \ fees are 2.9% of your donation amount or a minimum of $1.02, whichever\
            \ is greater. Donations are non-refundable. It's rare, but in the instance\
            \ where your donation cannot be delivered to the selected charity for\
            \ any reason, the funds will be sent to a default charity chosen by Spiral.\
            \ By continuing, you agree to the Terms of Use."
        successText:
          type: string
          description: "Text to display on a successful donation, with a detailed\
            \ breakdown of where your funds and fees are going"
          example: "Your donation request has been sent to our partner, the American\
            \ Online Giving Foundation, a 501(c)(3) charity. Once your donation has\
            \ cleared, you'll receive an email with a donation receipt that you may\
            \ use for tax purposes."
      description: Breakdown of donation fees and disclosures
    GivingCharityRecurringDonationCreateRequest:
      allOf:
      - $ref: '#/components/schemas/GivingCharityRecurringDonation'
    GivingCharityRecurringDonationResponse:
      allOf:
      - $ref: '#/components/schemas/GivingCharityRecurringDonation'
      - required:
        - id
        type: object
      - type: object
        properties:
          id:
            type: string
            description: Recurring donation ID
            example: 559a2425-67a1-40e4-bfa0-b58f6ae002d3
          nextDate:
            type: string
            description: Next donation datetime
            format: date-time
            example: 2023-04-13T16:09:26-04:00
    GivingCharityRecurringDonationUpdateRequest:
      allOf:
      - $ref: '#/components/schemas/GivingCharityRecurringDonation'
      - required:
        - id
        type: object
      - type: object
        properties:
          id:
            type: string
            description: Recurring donation ID
            example: 559a2425-67a1-40e4-bfa0-b58f6ae002d3
    DonationReceiptSummaryGrouping:
      type: string
      description: Possible groupings to select when getting receipt summary - ungrouped
        or grouped by charity
      enum:
      - UNGROUPED
      - CHARITY
    GivingCustomerDonationReceiptSummaryResponse:
      required:
      - years
      type: object
      properties:
        years:
          type: array
          description: List of years that donation receipt summary is available for
          items:
            $ref: '#/components/schemas/GivingCustomerDonationReceiptSummaryYear'
    FileResponse:
      required:
      - content
      - contentType
      type: object
      properties:
        contentType:
          type: string
          description: Content type of the receipt
          example: application/pdf
        content:
          type: string
          description: Base64-encoded byte content
          example: JVBERi0xLj...
    GivingCustomerCharitiesSummaryResponse:
      type: object
      properties:
        recurring:
          type: array
          items:
            $ref: '#/components/schemas/GivingCustomerRecurringCharityDonationResponse'
        all:
          type: array
          items:
            $ref: '#/components/schemas/GivingCustomerSupportedCharityDonationSummary'
      description: Customer giving charity donations summary
    UpdateFailedDonationCharityRequest:
      type: object
      properties:
        notificationId:
          type: string
          description: Unique Notification ID
          format: guid
        donationId:
          type: string
          description: Unique Donation ID
          format: guid
        charityId:
          type: string
          description: Unique Charity ID
          format: guid
    ClientImpactResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/SelectedImpactCategory'
        roundUp:
          $ref: '#/components/schemas/RoundUpSelections'
    SelectedImpactCategoriesResponse:
      required:
      - categories
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedImpactCategoryRewardSelection'
        isAnonymousDonor:
          type: boolean
          description: Do we donate to Charities without sharing customers information?
          example: true
    SelectedImpactCategoriesRequest:
      required:
      - categories
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedImpactCategoryRewardSelection'
        isAnonymousDonor:
          type: boolean
          description: Should we donate to Charity without sharing customers information?
          example: false
    NotificationsPaginatedResponse:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      - required:
        - content
        type: object
        properties:
          content:
            type: array
            items:
              $ref: '#/components/schemas/NotificationResponse'
    ActionNotificationsResponse:
      required:
      - notifications
      type: object
      properties:
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/ActionNotificationResponse'
    NotificationCountResponse:
      required:
      - notificationsCount
      type: object
      properties:
        notificationsCount:
          minimum: 0
          type: integer
          description: Number of new notifications
          example: 2
    NotificationDetailsResponse:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Unique notification id
          format: guid
          example: f6f30c46-14b2-4415-95e4-f224fc463f30
        createdAtDate:
          type: string
          description: Date and time when notification got created
          format: date-time
          example: 2023-05-30T20:15:54-04:00
        type:
          type: string
          description: Notification type
          example: DONATION_RECEIVED
        content:
          type: object
          description: Notification HTML content as an object
        isViewed:
          type: boolean
          description: Has notification been previously viewed by customer
          example: false
    TermsAndConditionsResponse:
      required:
      - copy
      type: object
      properties:
        copy:
          type: string
          description: Spiral's Terms and Conditions in String format
          example: Praesentium sapiente et aliquam. Est quae aperiam esse sapiente.
            Consequatur minus similique vel. Adipisci perspiciatis recusandae et.
            Dignissimos voluptatem et dolor cum qui et qui.
    CustomerSettings:
      required:
      - roundUp
      type: object
      properties:
        userSponsoredEverOptedIn:
          type: boolean
          description: True if the customer has ever opted in to round up in the user-sponsored
            flow.
          example: true
        rewardType:
          type: string
          example: UserSponsored
          enum:
          - UserSponsored
          - BankSponsored
        consented:
          type: boolean
          description: Has customer ever consented to our TOS
          example: true
        optedIn:
          type: boolean
          description: Is user currently opted in for everyday impact
          example: true
        roundUp:
          $ref: '#/components/schemas/RoundUpSelections'
        limitSelection:
          $ref: '#/components/schemas/CustomerImpactLimitSelections'
        limitValue:
          type: number
          description: Customer's limit value as in dollar amount
          example: 10.0
    CustomerSettingsRequest:
      allOf:
      - $ref: '#/components/schemas/CustomerSettings'
      - required:
        - limitSelection
        type: object
    CustomerClientSettingsResponse:
      required:
      - brandName
      - clientSettings
      - products
      type: object
      properties:
        brandName:
          type: string
          description: Shortname description of the fintech brand
          example: WestTech
        logo:
          type: string
          description: Client logo url
          example: www.britany-mueller.io
        colorLogo:
          type: string
          description: Colored client logo url
          example: www.britany-mueller.io
        whiteAlphaLogo:
          type: string
          description: White-alpha client logo url
          example: www.britany-mueller.io
        clientSettings:
          $ref: '#/components/schemas/CustomerClientSettings'
        products:
          $ref: '#/components/schemas/ClientProducts'
    DepositoryOrCreditTransaction:
      required:
      - amount
      - merchantCategoryCode
      - method
      - transactedAtDate
      - transactionId
      - type
      type: object
      properties:
        transactionId:
          type: string
          description: "Permanent, unique transaction identifier. Must survive changes\
            \ to pending status or amount."
          format: guid
          example: bf571405-c557-4971-a33f-9f8d50a89c87
        customerId:
          type: string
          description: Unique customer ID
          format: guid
          example: 27038d70-10d9-4b44-a91a-301db6ea9ed1
        accountId:
          type: string
          description: References to the account that this transaction is posting
            against.
          format: guid
          example: 8dcff2ff-0d71-47f5-9b2f-14e6ea1fb295
        description:
          type: string
          description: Description of the transaction.
        name:
          type: string
          description: Addenda or distinguishing information for the transaction.
        category:
          type: array
          description: "Hierarchical categorization, use multi-valued array to indicate\
            \ hierarchy."
          items:
            type: string
        tags:
          type: array
          description: "Flat categorization. For hashtags omit leading #."
          items:
            type: string
        endingBalance:
          type: number
          description: "Fixed-point decimal number, carried up to two decimal places."
          example: 15.1
        transactedAtDate:
          type: string
          description: "The date/time when the transaction was authorized, in the\
            \ time zone local to the transaction or to the customer."
          format: date-time
        settledAtDate:
          type: string
          description: "The date/time when the transaction settled, in the time zone\
            \ local to the customer. Must be null if the transaction is pending."
          format: date-time
        merchantCategoryCode:
          type: string
          description: Reference to the identity of the merchant related to this transaction.
          example: "1520"
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        currency:
          type: string
          description: The ISO 4217 currency in which this transaction is denominated.
            One of either the currency or non_iso_currency fields is required.
          example: USD
        nonIsoCurrency:
          type: string
          description: "If the transaction is denominated in a non-ISO currency, provide\
            \ the currency's symbol."
        type:
          $ref: '#/components/schemas/DepositoryOrCreditTransactionType'
        method:
          $ref: '#/components/schemas/DepositoryOrCreditTransactionMethod'
        isPending:
          type: boolean
          description: Indicates that this transaction has not posted.
        transactionAmount:
          type: number
          description: "Fixed-point decimal number, carried up to two decimal places."
          example: 12.78
        feeAmount:
          type: number
          description: "Fixed-point decimal number, carried up to two decimal places."
          example: 1.32
        transferAccountId:
          type: string
          description: "If this transaction is an internal transfer type, references\
            \ the accountId associated with this transaction."
          format: guid
      description: Describes a transaction against a debit or credit card account.
    TransactionImpactSummaryItem:
      required:
      - rewardUnitName
      type: object
      properties:
        charityRewardUnitId:
          type: string
          description: Unique Charity Reward Unit id
          format: guid
          example: 0befff1c-2079-42b2-bd15-e77e21034dd4
        rewardUnitId:
          type: string
          description: Unique Reward Unit id
          format: guid
          example: 0ebbaf7d-e6d7-4ba5-be0d-2c40122a2fa7
        rewardUnitName:
          type: string
          description: Reward unit name
          example: TREE
        rewardUnitTitle:
          type: string
          description: Title label text for associated reward unit
          example: Trees planted
        rewardUnitSubtitle:
          type: string
          description: Subtitle label text for associated reward unit
          example: to help the environment
        rewardUnitIcon:
          type: string
          description: URL for reward unit icon
          example: www.mildred-dubuque.biz
        totalImpactUnits:
          type: number
          description: Aggregated point value for associated reward unit
          example: 10.0
        totalDonatedAmount:
          type: number
          description: Aggregated dollar value for associated reward unit
          example: 10.0
      description: Customer's Impact summary report per unit
    CharityRewardUnit:
      required:
      - charityId
      - id
      - internalCostInCents
      - rewardUnitId
      - unit
      type: object
      properties:
        id:
          type: string
          description: Unique Charity Reward Unit ID
          format: guid
          example: c6cb4986-7265-46fc-82ba-288732052792
        charityId:
          type: string
          description: Charity ID this reward unit is assigned to
          format: guid
          example: 4e3d3249-e5c7-432c-8056-c014187e185b
        charityName:
          type: string
          description: Name of the charity (used in reply of enriched transactions).
          example: Garden of Eden
        internalCostAmount:
          type: number
          description: Internal cost per one unit. Up to 2 decimal points
          example: 0.1
        rewardUnitId:
          type: string
          description: Reward unit ID
          example: de98c639-5e62-43a0-941a-bde6470fa40d
        unit:
          type: string
          description: Reward Unit key
          example: TREE
    PaginatedResponse:
      required:
      - empty
      - first
      - last
      - number
      - size
      - sort
      - totalElements
      - totalPages
      type: object
      properties:
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          example: 10
        totalElements:
          type: integer
          description: Total number of elements
          format: int64
          example: 100
        first:
          type: boolean
          description: Is this the first page
          example: false
        last:
          type: boolean
          description: Is this the last page
          example: false
        number:
          type: integer
          description: Page number
          format: int32
        sort:
          $ref: '#/components/schemas/SortResponse'
        size:
          type: integer
          description: Page size
          format: int32
          example: 20
        empty:
          type: boolean
          description: Is this page empty
          example: false
    EverydayImpactCenterTransaction:
      allOf:
      - $ref: '#/components/schemas/TransactionImpactResponse'
      - type: object
        properties:
          cumulativeImpactUnits:
            type: number
            description: Point value for cumulative impact (units) at the time of
              transaction
            example: 8.25
          cumulativeProgressUnits:
            type: number
            description: Point value for one unit progress for that transaction. Can
              be >1 if transaction earned more than 1 unit.
            example: 0.5
    GivingCharityResponse:
      allOf:
      - $ref: '#/components/schemas/GivingCharity'
      - required:
        - id
        type: object
    GivingCustomerCharityDonationsResponse:
      type: object
      properties:
        charityId:
          type: string
          description: Spiral Charity ID
          format: guid
          example: b9cffe94-5c03-4ebe-94bd-7ffa205f2065
        recurring:
          $ref: '#/components/schemas/GivingCustomerCharityRecurringDonationResponse'
        oneTime:
          $ref: '#/components/schemas/GivingCustomerCharityDonationsSummary'
        total:
          $ref: '#/components/schemas/GivingCustomerCharityDonationsSummary'
      description: Customer donations info for a specific Charity
    GivingCustomerDonationsSummaryItem:
      required:
      - donatedAmount
      type: object
      properties:
        iconUrl:
          type: string
          description: Icon url for this item
          example: www.lady-rau.io
        donatedAmount:
          type: number
          description: Amount donated
          example: 10.0
      description: Customer giving donations summary item
    DonorInformation:
      required:
      - addressLine1
      - city
      - country
      - email
      - firstName
      - lastName
      - state
      - zip
      type: object
      properties:
        firstName:
          type: string
          description: Donor's first name
          example: John
        lastName:
          type: string
          description: Donor's last name
          example: Smith
        email:
          type: string
          description: Donor's email
          example: john@smith.com
        city:
          type: string
          description: Donor's city
          example: Sun Prairie
        country:
          type: string
          description: Donor's country
          example: USA
        addressLine1:
          type: string
          description: Donor's address line 1
          example: 710 W Main St
        addressLine2:
          type: string
          description: Donor's address line 2
          example: Suite 23
        state:
          type: string
          description: Donor's email
          example: WV
        zip:
          type: string
          description: Donor's zip code
          example: "53590"
      description: "Donor details, for receipt purposes."
    GivingCharityRecurringDonation:
      required:
      - accountId
      - charityId
      - coverFees
      - donationAmount
      - isAnonymous
      - isPaused
      - isStopped
      - startDate
      type: object
      properties:
        accountId:
          type: string
          description: External account ID donation is made from
          example: "800"
        charityId:
          type: string
          description: Spiral ID of Charity to donate to
          example: 9dc6300e-f4f0-4586-97a9-ca7a14aee6cd
        startDate:
          type: string
          description: Recurring donation start datetime
          format: date-time
          example: 2023-04-13T16:09:44-04:00
        donationAmount:
          minimum: 0.01
          type: number
          description: Dollar value that is donated to Charity
          example: 15.0
        isPaused:
          type: boolean
          description: Is recurring donation paused
          example: false
        isStopped:
          type: boolean
          description: Is recurring donation stopped
          example: false
        isAnonymous:
          type: boolean
          description: Is recurring donation anonymous
          example: false
        coverFees:
          type: boolean
          description: Does customer agree to cover donation fees
          example: false
    GivingCustomerDonationReceiptSummaryYear:
      required:
      - months
      - year
      type: object
      properties:
        year:
          type: string
          description: The given year
          example: "2023"
        months:
          type: array
          description: List of months of the given year that donation receipt summary
            is available for
          items:
            $ref: '#/components/schemas/GivingCustomerDonationReceiptSummaryMonth'
    GivingCustomerRecurringCharityDonationResponse:
      type: object
      properties:
        charity:
          $ref: '#/components/schemas/GivingCharityResponse'
        isPaused:
          type: boolean
          description: Is recurring donation paused
          example: false
        donationAmount:
          type: number
          description: Recurring donation amount
          example: 15.0
        id:
          type: string
          description: Recurring donation id
          format: guid
          example: fb156645-976d-46be-a3fb-8c8589bedaae
      description: Customer giving recurring charity donation
    GivingCustomerSupportedCharityDonationSummary:
      type: object
      properties:
        charity:
          $ref: '#/components/schemas/GivingCharityResponse'
        recurring:
          $ref: '#/components/schemas/GivingCustomerSupportedCharityDonationSummary_recurring'
        totalDonatedAmount:
          type: number
          description: Total amount donated to this charity (one-time and processed
            recurring)
          example: 200.0
      description: Customer giving charity donations summary
    SelectedImpactCategory:
      type: object
      properties:
        categoryName:
          type: string
          example: Hotels
        charityName:
          type: string
          example: Charity 1
        rewardUnitName:
          type: string
          example: Meal
        internalCostAmount:
          type: number
          description: Internal cost of this reward unit
          example: 0.1
      description: Lightweight Impact Category with attributes selected by client
    RoundUpSelections:
      type: string
      description: Available selections for the user sponsored reward type
      enum:
      - dollar
      - five_dollars
      - ten_dollars
    ExtendedImpactCategoryRewardSelection:
      type: object
      description: Impact Category Charity and Reward Unit selection with additional
        details
      allOf:
      - $ref: '#/components/schemas/ImpactCategoryRewardSelection'
      - required:
        - rewardUnitName
        - selected
        type: object
        properties:
          rewardUnitName:
            type: string
            description: Name of the reward unit
            example: Tree
          isEnabled:
            type: boolean
            description: Is Impact Category enabled for a customer
            example: false
    NotificationResponse:
      required:
      - content
      - createdAtDate
      - id
      - isViewed
      type: object
      properties:
        id:
          type: string
          description: Unique Notification id
          format: guid
          example: 33764da1-b21e-405a-b7cc-0acec03840df
        createdAtDate:
          type: string
          description: Date and time when notification got created
          format: date-time
          example: 2023-05-18T16:20:43-04:00
        iconUrl:
          type: string
          description: Notification icon url
          example: www.terrance-kub.net
        content:
          type: object
          description: Notification HTML content as an object
        isViewed:
          type: boolean
          description: Has notification been viewed by customer
          example: false
    ActionNotificationResponse:
      allOf:
      - $ref: '#/components/schemas/NotificationResponse'
      - required:
        - isActionable
        type: object
        properties:
          isActionable:
            type: boolean
            description: Does notification require customer action
            example: false
    CustomerImpactLimitSelections:
      type: string
      description: Available selections for the customer impact limit
      enum:
      - daily
      - weekly
      - monthly
      - no_limit
    CustomerClientSettings:
      required:
      - brandColors
      type: object
      properties:
        brandColors:
          type: array
          description: Hierarchical order of brand colors in HTML/CSS values
          items:
            type: string
        fonts:
          $ref: '#/components/schemas/ClientFonts'
      description: Client settings for customer
    ClientProducts:
      required:
      - businessImpact
      - daf
      - everydayImpact
      - giving
      type: object
      properties:
        everydayImpact:
          type: boolean
          description: Clients Everyday Impact product on/off
          example: true
          default: false
        giving:
          type: boolean
          description: Clients Giving product on/off
          example: true
          default: false
        daf:
          type: boolean
          description: Clients DAF product on/off
          example: true
          default: false
        businessImpact:
          type: boolean
          description: Clients Business Impact product on/off
          example: true
          default: false
    GeoLocation:
      type: object
      properties:
        coordinates:
          $ref: '#/components/schemas/GeoCoordinates'
        city:
          type: string
          description: City name.
          example: New York
        region:
          type: string
          description: ISO 3166-2 sub-national region identifier.
          example: US
        country:
          type: string
          description: ISO 3166-1 two-character country identifier.
          example: US
      description: Geographic location.
    DepositoryOrCreditTransactionType:
      type: string
      description: Classification of DepositoryOrCredit by purpose as an enum.
      enum:
      - transfer
      - cash
      - fee
      - purchase
      - interest
      - deposit
    DepositoryOrCreditTransactionMethod:
      type: string
      description: Classification of DepositoryOrCredit by purpose as an enum.
      enum:
      - card present
      - card not present
      - check
      - eft
    SortResponse:
      required:
      - empty
      - sorted
      - unsorted
      type: object
      properties:
        empty:
          type: boolean
          description: Did sort by any field
          example: false
        unsorted:
          type: boolean
          description: Are the results not sorted
          example: false
        sorted:
          type: boolean
          description: Are the results sorted
          example: false
    GivingCharity:
      required:
      - ein
      - name
      type: object
      properties:
        id:
          type: string
          description: Unique ID of giving charity
          example: c102861d-4e32-4ad4-ba74-d6fcfd3a4809
        name:
          type: string
          description: Name of the giving charity
          example: Garden of Eden
        ein:
          type: string
          description: Unique EIN of giving charity
          example: 12-1234567
        description:
          type: string
          description: Short description of giving charity
          example: Dolorum rem quis quaerat delectus dolor.
        categories:
          type: array
          description: List of categories giving charity is assigned to
          items:
            $ref: '#/components/schemas/GivingCharityInnerCategory'
        images:
          type: array
          description: List of giving charity images
          items:
            $ref: '#/components/schemas/CharityImage'
        location:
          type: string
          description: City and state the charity is located in
          example: "New York, NY"
    GivingCustomerCharityRecurringDonationResponse:
      allOf:
      - $ref: '#/components/schemas/GivingCharityRecurringDonationResponse'
      - type: object
        properties:
          iconUrl:
            type: string
            description: Recurring donations icon url
            example: www.hiram-shields.io
    GivingCustomerCharityDonationsSummary:
      required:
      - charityId
      - totalDonatedAmount
      type: object
      properties:
        charityId:
          type: string
          description: Charity ID
          format: guid
          example: 9a496f11-91f1-4061-a6e9-1680e84b52bd
        iconUrl:
          type: string
          description: One time donations icon url
          example: www.katheleen-schmeler.biz
        totalDonatedAmount:
          type: number
          description: Total amount of donations
          example: 134.0
    GivingCustomerDonationReceiptSummaryMonth:
      required:
      - groups
      - month
      - title
      type: object
      properties:
        month:
          type: string
          description: The given month
          example: February
        title:
          type: string
          description: Title to display in the summary list
          example: February donation receipts
        groups:
          type: array
          description: "List of grouped receipts for the given month, based on the\
            \ provided grouping setting"
          items:
            $ref: '#/components/schemas/GivingCustomerDonationReceiptSummaryGroup'
    ImpactCategoryRewardSelection:
      required:
      - charityId
      - impactCategoryId
      - rewardUnitId
      type: object
      properties:
        impactCategoryId:
          type: string
          description: Unique Everyday Impact Category id
          format: guid
          example: 9503fab9-7f0f-494c-a9b0-3c70d95c153d
        charityId:
          type: string
          description: Unique Charity id
          format: guid
          example: a0941bcd-7076-4a7f-800c-6f241c71ae61
        charityRewardUnitId:
          type: string
          description: Unique Charity reward unit id
          format: guid
          example: 93055886-b29a-4f25-b96e-bb1b77ecd399
        rewardUnitId:
          type: string
          description: Unique reward unit id
          format: guid
          example: 45f435cf-fe5c-4719-9aae-e5e2013a7bed
      description: Impact Category Charity and Reward Unit selection for a Client
    ClientFonts:
      type: object
      properties:
        headingFont:
          $ref: '#/components/schemas/ClientFont'
        bodyFont:
          $ref: '#/components/schemas/ClientFont'
    GeoCoordinates:
      type: object
      properties:
        lat:
          type: number
          description: Latitude coordinate.
          example: 40.7128
        lon:
          type: number
          description: Longitude coordinate.
          example: 74.006
      description: Geographic coordinates in EPSG:4326 WGS84 (lat/long)
    GivingCharityInnerCategory:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: Unique ID of giving charity category
          example: c102861d-4e32-4ad4-ba74-d6fcfd3a4809
        name:
          type: string
          description: Name of the giving charity category
          example: Poverty
    CharityImage:
      required:
      - type
      - url
      type: object
      properties:
        id:
          type: string
          description: Unique Charity image id
          format: guid
          example: d6a9be61-b884-4971-8cd3-dd9dc05d81b1
        url:
          type: string
          description: URL within Cloudinary
          example: www.ginny-williamson.net
        type:
          type: string
          description: Image type
          example: Logo
    GivingCustomerDonationReceiptSummaryGroup:
      required:
      - groupTitle
      - receipts
      type: object
      properties:
        groupTitle:
          type: string
          description: "The group title to display, based on the provided grouping\
            \ setting"
          example: All
        receipts:
          type: array
          description: List of receipts in the given group
          items:
            $ref: '#/components/schemas/GivingCustomerDonationReceiptSummaryReceipt'
    ClientFont:
      required:
      - font
      - type
      type: object
      properties:
        font:
          type: string
          description: The font's name
          example: Comic Sans
        type:
          $ref: '#/components/schemas/ClientFontType'
    GivingCustomerDonationReceiptSummaryReceipt:
      required:
      - charityName
      - id
      - isReady
      - period
      - receiptDate
      type: object
      properties:
        id:
          type: string
          description: Receipt ID
          example: a150e67a-c1c6-4395-bc5a-3371aac0076b
        receiptDate:
          type: string
          description: Datetime of the receipt
          format: date-time
          example: 2023-04-14T11:43:58-04:00
        charityName:
          type: string
          description: Recipient charity name
          example: American Red Cross
        period:
          type: string
          description: Donation period - one-time or monthly
          example: One-time
        isReady:
          type: boolean
          description: Whether the receipt has been processed and is ready for viewing
          example: true
    ClientFontType:
      type: string
      description: Type and source of the selected font
      enum:
      - GOOGLE
      - GOOGLE_OVERRIDE
    GivingCustomerSupportedCharityDonationSummary_recurring:
      type: object
      properties:
        isPaused:
          type: boolean
          description: Is recurring donation paused
          example: false
        donationAmount:
          type: number
          description: Recurring donation amount
          example: 10.0
        id:
          type: string
          description: Recurring donation id
          format: guid
          example: c4047f05-9d32-4cbe-9378-fdd14a68f532
  parameters:
    CustomerIdHeader:
      name: X-SPIRAL-CUSTOMER-ID
      in: header
      description: Unique end user bank customer Id.
      schema:
        type: string
        format: guid
        example: 9556c434-780a-4452-82dd-0bdaa299bea4
    RequestIdHeader:
      name: X-SPIRAL-REQUEST-ID
      in: header
      description: Unique request Id used for troubleshooting.
      schema:
        type: string
        format: guid
        example: b1df1812-ee1c-4178-87ed-89c711a01672
    SdkVersionHeader:
      name: X-SPIRAL-SDK-VERSION
      in: header
      description: Unique version of the SDK that makes the call (ie. ios-1.2.3 or
        web-1.2.3)
      schema:
        type: string
        format: guid
        example: ios-1.0.0
    PageableQuery:
      name: pageable
      in: query
      schema:
        $ref: '#/components/schemas/Pageable'
    ClientIdHeader:
      name: X-SPIRAL-CLIENT-ID
      in: header
      description: Unique bank client Id.
      schema:
        type: string
        format: guid
        example: c81ad7dc-7668-4962-a453-8ebc058831d0
  securitySchemes:
    ClientID:
      type: apiKey
      description: Unique Spiral issued Client ID required for most requests (except
        when creating a new client).
      name: X-SPIRAL-CLIENT-ID
      in: header
